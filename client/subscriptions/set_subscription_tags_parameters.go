// Code generated by go-swagger; DO NOT EDIT.

package subscriptions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/bjerkio/crayon-api-go/models"
)

// NewSetSubscriptionTagsParams creates a new SetSubscriptionTagsParams object
// with the default values initialized.
func NewSetSubscriptionTagsParams() *SetSubscriptionTagsParams {
	var ()
	return &SetSubscriptionTagsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSetSubscriptionTagsParamsWithTimeout creates a new SetSubscriptionTagsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSetSubscriptionTagsParamsWithTimeout(timeout time.Duration) *SetSubscriptionTagsParams {
	var ()
	return &SetSubscriptionTagsParams{

		timeout: timeout,
	}
}

// NewSetSubscriptionTagsParamsWithContext creates a new SetSubscriptionTagsParams object
// with the default values initialized, and the ability to set a context for a request
func NewSetSubscriptionTagsParamsWithContext(ctx context.Context) *SetSubscriptionTagsParams {
	var ()
	return &SetSubscriptionTagsParams{

		Context: ctx,
	}
}

// NewSetSubscriptionTagsParamsWithHTTPClient creates a new SetSubscriptionTagsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSetSubscriptionTagsParamsWithHTTPClient(client *http.Client) *SetSubscriptionTagsParams {
	var ()
	return &SetSubscriptionTagsParams{
		HTTPClient: client,
	}
}

/*SetSubscriptionTagsParams contains all the parameters to send to the API endpoint
for the set subscription tags operation typically these are written to a http.Request
*/
type SetSubscriptionTagsParams struct {

	/*SubscriptionID*/
	SubscriptionID string
	/*Tags*/
	Tags *models.SubscriptionTags

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the set subscription tags params
func (o *SetSubscriptionTagsParams) WithTimeout(timeout time.Duration) *SetSubscriptionTagsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set subscription tags params
func (o *SetSubscriptionTagsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set subscription tags params
func (o *SetSubscriptionTagsParams) WithContext(ctx context.Context) *SetSubscriptionTagsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set subscription tags params
func (o *SetSubscriptionTagsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set subscription tags params
func (o *SetSubscriptionTagsParams) WithHTTPClient(client *http.Client) *SetSubscriptionTagsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set subscription tags params
func (o *SetSubscriptionTagsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSubscriptionID adds the subscriptionID to the set subscription tags params
func (o *SetSubscriptionTagsParams) WithSubscriptionID(subscriptionID string) *SetSubscriptionTagsParams {
	o.SetSubscriptionID(subscriptionID)
	return o
}

// SetSubscriptionID adds the subscriptionId to the set subscription tags params
func (o *SetSubscriptionTagsParams) SetSubscriptionID(subscriptionID string) {
	o.SubscriptionID = subscriptionID
}

// WithTags adds the tags to the set subscription tags params
func (o *SetSubscriptionTagsParams) WithTags(tags *models.SubscriptionTags) *SetSubscriptionTagsParams {
	o.SetTags(tags)
	return o
}

// SetTags adds the tags to the set subscription tags params
func (o *SetSubscriptionTagsParams) SetTags(tags *models.SubscriptionTags) {
	o.Tags = tags
}

// WriteToRequest writes these params to a swagger request
func (o *SetSubscriptionTagsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param subscriptionId
	if err := r.SetPathParam("subscriptionId", o.SubscriptionID); err != nil {
		return err
	}

	if o.Tags != nil {
		if err := r.SetBodyParam(o.Tags); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
