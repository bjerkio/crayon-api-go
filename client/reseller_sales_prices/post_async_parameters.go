// Code generated by go-swagger; DO NOT EDIT.

package reseller_sales_prices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/bjerkio/crayon-api-go/models"
)

// NewPostAsyncParams creates a new PostAsyncParams object
// with the default values initialized.
func NewPostAsyncParams() *PostAsyncParams {
	var ()
	return &PostAsyncParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostAsyncParamsWithTimeout creates a new PostAsyncParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostAsyncParamsWithTimeout(timeout time.Duration) *PostAsyncParams {
	var ()
	return &PostAsyncParams{

		timeout: timeout,
	}
}

// NewPostAsyncParamsWithContext creates a new PostAsyncParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostAsyncParamsWithContext(ctx context.Context) *PostAsyncParams {
	var ()
	return &PostAsyncParams{

		Context: ctx,
	}
}

// NewPostAsyncParamsWithHTTPClient creates a new PostAsyncParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostAsyncParamsWithHTTPClient(client *http.Client) *PostAsyncParams {
	var ()
	return &PostAsyncParams{
		HTTPClient: client,
	}
}

/*PostAsyncParams contains all the parameters to send to the API endpoint
for the post async operation typically these are written to a http.Request
*/
type PostAsyncParams struct {

	/*ResellerSalesPrice*/
	ResellerSalesPrice *models.ResellerSalesPrice

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post async params
func (o *PostAsyncParams) WithTimeout(timeout time.Duration) *PostAsyncParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post async params
func (o *PostAsyncParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post async params
func (o *PostAsyncParams) WithContext(ctx context.Context) *PostAsyncParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post async params
func (o *PostAsyncParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post async params
func (o *PostAsyncParams) WithHTTPClient(client *http.Client) *PostAsyncParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post async params
func (o *PostAsyncParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithResellerSalesPrice adds the resellerSalesPrice to the post async params
func (o *PostAsyncParams) WithResellerSalesPrice(resellerSalesPrice *models.ResellerSalesPrice) *PostAsyncParams {
	o.SetResellerSalesPrice(resellerSalesPrice)
	return o
}

// SetResellerSalesPrice adds the resellerSalesPrice to the post async params
func (o *PostAsyncParams) SetResellerSalesPrice(resellerSalesPrice *models.ResellerSalesPrice) {
	o.ResellerSalesPrice = resellerSalesPrice
}

// WriteToRequest writes these params to a swagger request
func (o *PostAsyncParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ResellerSalesPrice != nil {
		if err := r.SetBodyParam(o.ResellerSalesPrice); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
