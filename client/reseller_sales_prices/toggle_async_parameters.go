// Code generated by go-swagger; DO NOT EDIT.

package reseller_sales_prices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/bjerkio/crayon-api-go/models"
)

// NewToggleAsyncParams creates a new ToggleAsyncParams object
// with the default values initialized.
func NewToggleAsyncParams() *ToggleAsyncParams {
	var ()
	return &ToggleAsyncParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewToggleAsyncParamsWithTimeout creates a new ToggleAsyncParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewToggleAsyncParamsWithTimeout(timeout time.Duration) *ToggleAsyncParams {
	var ()
	return &ToggleAsyncParams{

		timeout: timeout,
	}
}

// NewToggleAsyncParamsWithContext creates a new ToggleAsyncParams object
// with the default values initialized, and the ability to set a context for a request
func NewToggleAsyncParamsWithContext(ctx context.Context) *ToggleAsyncParams {
	var ()
	return &ToggleAsyncParams{

		Context: ctx,
	}
}

// NewToggleAsyncParamsWithHTTPClient creates a new ToggleAsyncParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewToggleAsyncParamsWithHTTPClient(client *http.Client) *ToggleAsyncParams {
	var ()
	return &ToggleAsyncParams{
		HTTPClient: client,
	}
}

/*ToggleAsyncParams contains all the parameters to send to the API endpoint
for the toggle async operation typically these are written to a http.Request
*/
type ToggleAsyncParams struct {

	/*ResellerSalesPriceToggle*/
	ResellerSalesPriceToggle *models.ResellerSalesPriceToggle

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the toggle async params
func (o *ToggleAsyncParams) WithTimeout(timeout time.Duration) *ToggleAsyncParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the toggle async params
func (o *ToggleAsyncParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the toggle async params
func (o *ToggleAsyncParams) WithContext(ctx context.Context) *ToggleAsyncParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the toggle async params
func (o *ToggleAsyncParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the toggle async params
func (o *ToggleAsyncParams) WithHTTPClient(client *http.Client) *ToggleAsyncParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the toggle async params
func (o *ToggleAsyncParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithResellerSalesPriceToggle adds the resellerSalesPriceToggle to the toggle async params
func (o *ToggleAsyncParams) WithResellerSalesPriceToggle(resellerSalesPriceToggle *models.ResellerSalesPriceToggle) *ToggleAsyncParams {
	o.SetResellerSalesPriceToggle(resellerSalesPriceToggle)
	return o
}

// SetResellerSalesPriceToggle adds the resellerSalesPriceToggle to the toggle async params
func (o *ToggleAsyncParams) SetResellerSalesPriceToggle(resellerSalesPriceToggle *models.ResellerSalesPriceToggle) {
	o.ResellerSalesPriceToggle = resellerSalesPriceToggle
}

// WriteToRequest writes these params to a swagger request
func (o *ToggleAsyncParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ResellerSalesPriceToggle != nil {
		if err := r.SetBodyParam(o.ResellerSalesPriceToggle); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
