// Code generated by go-swagger; DO NOT EDIT.

package google_orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/bjerkio/crayon-api-go/models"
)

// NewCheckoutAsyncParams creates a new CheckoutAsyncParams object
// with the default values initialized.
func NewCheckoutAsyncParams() *CheckoutAsyncParams {
	var ()
	return &CheckoutAsyncParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCheckoutAsyncParamsWithTimeout creates a new CheckoutAsyncParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCheckoutAsyncParamsWithTimeout(timeout time.Duration) *CheckoutAsyncParams {
	var ()
	return &CheckoutAsyncParams{

		timeout: timeout,
	}
}

// NewCheckoutAsyncParamsWithContext creates a new CheckoutAsyncParams object
// with the default values initialized, and the ability to set a context for a request
func NewCheckoutAsyncParamsWithContext(ctx context.Context) *CheckoutAsyncParams {
	var ()
	return &CheckoutAsyncParams{

		Context: ctx,
	}
}

// NewCheckoutAsyncParamsWithHTTPClient creates a new CheckoutAsyncParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCheckoutAsyncParamsWithHTTPClient(client *http.Client) *CheckoutAsyncParams {
	var ()
	return &CheckoutAsyncParams{
		HTTPClient: client,
	}
}

/*CheckoutAsyncParams contains all the parameters to send to the API endpoint
for the checkout async operation typically these are written to a http.Request
*/
type CheckoutAsyncParams struct {

	/*Order*/
	Order *models.GoogleOrder

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the checkout async params
func (o *CheckoutAsyncParams) WithTimeout(timeout time.Duration) *CheckoutAsyncParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the checkout async params
func (o *CheckoutAsyncParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the checkout async params
func (o *CheckoutAsyncParams) WithContext(ctx context.Context) *CheckoutAsyncParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the checkout async params
func (o *CheckoutAsyncParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the checkout async params
func (o *CheckoutAsyncParams) WithHTTPClient(client *http.Client) *CheckoutAsyncParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the checkout async params
func (o *CheckoutAsyncParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOrder adds the order to the checkout async params
func (o *CheckoutAsyncParams) WithOrder(order *models.GoogleOrder) *CheckoutAsyncParams {
	o.SetOrder(order)
	return o
}

// SetOrder adds the order to the checkout async params
func (o *CheckoutAsyncParams) SetOrder(order *models.GoogleOrder) {
	o.Order = order
}

// WriteToRequest writes these params to a swagger request
func (o *CheckoutAsyncParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Order != nil {
		if err := r.SetBodyParam(o.Order); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
