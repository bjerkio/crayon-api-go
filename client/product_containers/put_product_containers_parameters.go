// Code generated by go-swagger; DO NOT EDIT.

package product_containers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/bjerkio/crayon-api-go/models"
)

// NewPutProductContainersParams creates a new PutProductContainersParams object
// with the default values initialized.
func NewPutProductContainersParams() *PutProductContainersParams {
	var (
		requireEulaAnalysisDefault = bool(false)
	)
	return &PutProductContainersParams{
		RequireEulaAnalysis: &requireEulaAnalysisDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewPutProductContainersParamsWithTimeout creates a new PutProductContainersParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutProductContainersParamsWithTimeout(timeout time.Duration) *PutProductContainersParams {
	var (
		requireEulaAnalysisDefault = bool(false)
	)
	return &PutProductContainersParams{
		RequireEulaAnalysis: &requireEulaAnalysisDefault,

		timeout: timeout,
	}
}

// NewPutProductContainersParamsWithContext creates a new PutProductContainersParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutProductContainersParamsWithContext(ctx context.Context) *PutProductContainersParams {
	var (
		requireEulaAnalysisDefault = bool(false)
	)
	return &PutProductContainersParams{
		RequireEulaAnalysis: &requireEulaAnalysisDefault,

		Context: ctx,
	}
}

// NewPutProductContainersParamsWithHTTPClient creates a new PutProductContainersParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutProductContainersParamsWithHTTPClient(client *http.Client) *PutProductContainersParams {
	var (
		requireEulaAnalysisDefault = bool(false)
	)
	return &PutProductContainersParams{
		RequireEulaAnalysis: &requireEulaAnalysisDefault,
		HTTPClient:          client,
	}
}

/*PutProductContainersParams contains all the parameters to send to the API endpoint
for the put product containers operation typically these are written to a http.Request
*/
type PutProductContainersParams struct {

	/*ID*/
	ID int32
	/*ProductContainer*/
	ProductContainer *models.ProductContainer
	/*RequireEulaAnalysis*/
	RequireEulaAnalysis *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put product containers params
func (o *PutProductContainersParams) WithTimeout(timeout time.Duration) *PutProductContainersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put product containers params
func (o *PutProductContainersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put product containers params
func (o *PutProductContainersParams) WithContext(ctx context.Context) *PutProductContainersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put product containers params
func (o *PutProductContainersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put product containers params
func (o *PutProductContainersParams) WithHTTPClient(client *http.Client) *PutProductContainersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put product containers params
func (o *PutProductContainersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the put product containers params
func (o *PutProductContainersParams) WithID(id int32) *PutProductContainersParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the put product containers params
func (o *PutProductContainersParams) SetID(id int32) {
	o.ID = id
}

// WithProductContainer adds the productContainer to the put product containers params
func (o *PutProductContainersParams) WithProductContainer(productContainer *models.ProductContainer) *PutProductContainersParams {
	o.SetProductContainer(productContainer)
	return o
}

// SetProductContainer adds the productContainer to the put product containers params
func (o *PutProductContainersParams) SetProductContainer(productContainer *models.ProductContainer) {
	o.ProductContainer = productContainer
}

// WithRequireEulaAnalysis adds the requireEulaAnalysis to the put product containers params
func (o *PutProductContainersParams) WithRequireEulaAnalysis(requireEulaAnalysis *bool) *PutProductContainersParams {
	o.SetRequireEulaAnalysis(requireEulaAnalysis)
	return o
}

// SetRequireEulaAnalysis adds the requireEulaAnalysis to the put product containers params
func (o *PutProductContainersParams) SetRequireEulaAnalysis(requireEulaAnalysis *bool) {
	o.RequireEulaAnalysis = requireEulaAnalysis
}

// WriteToRequest writes these params to a swagger request
func (o *PutProductContainersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt32(o.ID)); err != nil {
		return err
	}

	if o.ProductContainer != nil {
		if err := r.SetBodyParam(o.ProductContainer); err != nil {
			return err
		}
	}

	if o.RequireEulaAnalysis != nil {

		// query param requireEulaAnalysis
		var qrRequireEulaAnalysis bool
		if o.RequireEulaAnalysis != nil {
			qrRequireEulaAnalysis = *o.RequireEulaAnalysis
		}
		qRequireEulaAnalysis := swag.FormatBool(qrRequireEulaAnalysis)
		if qRequireEulaAnalysis != "" {
			if err := r.SetQueryParam("requireEulaAnalysis", qRequireEulaAnalysis); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
