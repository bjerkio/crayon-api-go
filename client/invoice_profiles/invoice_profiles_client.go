// Code generated by go-swagger; DO NOT EDIT.

package invoice_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new invoice profiles API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for invoice profiles API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteInvoiceProfiles(params *DeleteInvoiceProfilesParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteInvoiceProfilesOK, error)

	GetInvoiceProfiles(params *GetInvoiceProfilesParams, authInfo runtime.ClientAuthInfoWriter) (*GetInvoiceProfilesOK, error)

	PostInvoiceProfiles(params *PostInvoiceProfilesParams, authInfo runtime.ClientAuthInfoWriter) (*PostInvoiceProfilesOK, error)

	PutInvoiceProfiles(params *PutInvoiceProfilesParams, authInfo runtime.ClientAuthInfoWriter) (*PutInvoiceProfilesOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteInvoiceProfiles delete invoice profiles API
*/
func (a *Client) DeleteInvoiceProfiles(params *DeleteInvoiceProfilesParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteInvoiceProfilesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteInvoiceProfilesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteInvoiceProfiles",
		Method:             "DELETE",
		PathPattern:        "/api/v1/InvoiceProfiles/{id}",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteInvoiceProfilesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteInvoiceProfilesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteInvoiceProfiles: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetInvoiceProfiles get invoice profiles API
*/
func (a *Client) GetInvoiceProfiles(params *GetInvoiceProfilesParams, authInfo runtime.ClientAuthInfoWriter) (*GetInvoiceProfilesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInvoiceProfilesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetInvoiceProfiles",
		Method:             "GET",
		PathPattern:        "/api/v1/InvoiceProfiles",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetInvoiceProfilesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInvoiceProfilesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetInvoiceProfiles: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostInvoiceProfiles post invoice profiles API
*/
func (a *Client) PostInvoiceProfiles(params *PostInvoiceProfilesParams, authInfo runtime.ClientAuthInfoWriter) (*PostInvoiceProfilesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostInvoiceProfilesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostInvoiceProfiles",
		Method:             "POST",
		PathPattern:        "/api/v1/InvoiceProfiles",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostInvoiceProfilesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostInvoiceProfilesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostInvoiceProfiles: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PutInvoiceProfiles put invoice profiles API
*/
func (a *Client) PutInvoiceProfiles(params *PutInvoiceProfilesParams, authInfo runtime.ClientAuthInfoWriter) (*PutInvoiceProfilesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutInvoiceProfilesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PutInvoiceProfiles",
		Method:             "PUT",
		PathPattern:        "/api/v1/InvoiceProfiles/{id}",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PutInvoiceProfilesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutInvoiceProfilesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PutInvoiceProfiles: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
