// Code generated by go-swagger; DO NOT EDIT.

package invoice_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/bjerkio/crayon-api-go/models"
)

// NewPostInvoiceProfilesParams creates a new PostInvoiceProfilesParams object
// with the default values initialized.
func NewPostInvoiceProfilesParams() *PostInvoiceProfilesParams {
	var ()
	return &PostInvoiceProfilesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostInvoiceProfilesParamsWithTimeout creates a new PostInvoiceProfilesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostInvoiceProfilesParamsWithTimeout(timeout time.Duration) *PostInvoiceProfilesParams {
	var ()
	return &PostInvoiceProfilesParams{

		timeout: timeout,
	}
}

// NewPostInvoiceProfilesParamsWithContext creates a new PostInvoiceProfilesParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostInvoiceProfilesParamsWithContext(ctx context.Context) *PostInvoiceProfilesParams {
	var ()
	return &PostInvoiceProfilesParams{

		Context: ctx,
	}
}

// NewPostInvoiceProfilesParamsWithHTTPClient creates a new PostInvoiceProfilesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostInvoiceProfilesParamsWithHTTPClient(client *http.Client) *PostInvoiceProfilesParams {
	var ()
	return &PostInvoiceProfilesParams{
		HTTPClient: client,
	}
}

/*PostInvoiceProfilesParams contains all the parameters to send to the API endpoint
for the post invoice profiles operation typically these are written to a http.Request
*/
type PostInvoiceProfilesParams struct {

	/*InvoiceProfile*/
	InvoiceProfile *models.InvoiceProfile

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post invoice profiles params
func (o *PostInvoiceProfilesParams) WithTimeout(timeout time.Duration) *PostInvoiceProfilesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post invoice profiles params
func (o *PostInvoiceProfilesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post invoice profiles params
func (o *PostInvoiceProfilesParams) WithContext(ctx context.Context) *PostInvoiceProfilesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post invoice profiles params
func (o *PostInvoiceProfilesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post invoice profiles params
func (o *PostInvoiceProfilesParams) WithHTTPClient(client *http.Client) *PostInvoiceProfilesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post invoice profiles params
func (o *PostInvoiceProfilesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInvoiceProfile adds the invoiceProfile to the post invoice profiles params
func (o *PostInvoiceProfilesParams) WithInvoiceProfile(invoiceProfile *models.InvoiceProfile) *PostInvoiceProfilesParams {
	o.SetInvoiceProfile(invoiceProfile)
	return o
}

// SetInvoiceProfile adds the invoiceProfile to the post invoice profiles params
func (o *PostInvoiceProfilesParams) SetInvoiceProfile(invoiceProfile *models.InvoiceProfile) {
	o.InvoiceProfile = invoiceProfile
}

// WriteToRequest writes these params to a swagger request
func (o *PostInvoiceProfilesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.InvoiceProfile != nil {
		if err := r.SetBodyParam(o.InvoiceProfile); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
