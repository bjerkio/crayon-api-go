// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ActivityLogItem activity log item
//
// swagger:model ActivityLogItem
type ActivityLogItem struct {

	// change type
	// Enum: [Delete Insert Update]
	ChangeType string `json:"ChangeType,omitempty"`

	// changed by
	ChangedBy string `json:"ChangedBy,omitempty"`

	// changed column
	ChangedColumn string `json:"ChangedColumn,omitempty"`

	// changed date
	// Format: date-time
	ChangedDate strfmt.DateTime `json:"ChangedDate,omitempty"`

	// changed from
	ChangedFrom string `json:"ChangedFrom,omitempty"`

	// changed to
	ChangedTo string `json:"ChangedTo,omitempty"`

	// custom values
	CustomValues map[string]string `json:"CustomValues,omitempty"`

	// entity
	Entity string `json:"Entity,omitempty"`

	// Id
	ID int32 `json:"Id,omitempty"`
}

// Validate validates this activity log item
func (m *ActivityLogItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChangeType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateChangedDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var activityLogItemTypeChangeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Delete","Insert","Update"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		activityLogItemTypeChangeTypePropEnum = append(activityLogItemTypeChangeTypePropEnum, v)
	}
}

const (

	// ActivityLogItemChangeTypeDelete captures enum value "Delete"
	ActivityLogItemChangeTypeDelete string = "Delete"

	// ActivityLogItemChangeTypeInsert captures enum value "Insert"
	ActivityLogItemChangeTypeInsert string = "Insert"

	// ActivityLogItemChangeTypeUpdate captures enum value "Update"
	ActivityLogItemChangeTypeUpdate string = "Update"
)

// prop value enum
func (m *ActivityLogItem) validateChangeTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, activityLogItemTypeChangeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ActivityLogItem) validateChangeType(formats strfmt.Registry) error {

	if swag.IsZero(m.ChangeType) { // not required
		return nil
	}

	// value enum
	if err := m.validateChangeTypeEnum("ChangeType", "body", m.ChangeType); err != nil {
		return err
	}

	return nil
}

func (m *ActivityLogItem) validateChangedDate(formats strfmt.Registry) error {

	if swag.IsZero(m.ChangedDate) { // not required
		return nil
	}

	if err := validate.FormatOf("ChangedDate", "body", "date-time", m.ChangedDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ActivityLogItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ActivityLogItem) UnmarshalBinary(b []byte) error {
	var res ActivityLogItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
