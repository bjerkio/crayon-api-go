// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AgreementProductsSubFilter agreement products sub filter
//
// swagger:model AgreementProductsSubFilter
type AgreementProductsSubFilter struct {

	// language names
	LanguageNames []string `json:"LanguageNames"`

	// level names
	LevelNames []string `json:"LevelNames"`

	// license agreement type names
	LicenseAgreementTypeNames []string `json:"LicenseAgreementTypeNames"`

	// license type names
	LicenseTypeNames []string `json:"LicenseTypeNames"`

	// offering names
	OfferingNames []string `json:"OfferingNames"`

	// operating system names
	OperatingSystemNames []string `json:"OperatingSystemNames"`

	// part numbers
	PartNumbers []string `json:"PartNumbers"`

	// pool names
	PoolNames []string `json:"PoolNames"`

	// product category names
	ProductCategoryNames []string `json:"ProductCategoryNames"`

	// product family names
	ProductFamilyNames []string `json:"ProductFamilyNames"`

	// product type names
	ProductTypeNames []string `json:"ProductTypeNames"`

	// program names
	ProgramNames []string `json:"ProgramNames"`

	// publisher ids
	PublisherIds []int32 `json:"PublisherIds"`

	// publisher names
	PublisherNames []string `json:"PublisherNames"`

	// purchase period names
	PurchasePeriodNames []string `json:"PurchasePeriodNames"`

	// purchase unit names
	PurchaseUnitNames []string `json:"PurchaseUnitNames"`

	// region names
	RegionNames []string `json:"RegionNames"`

	// version names
	VersionNames []string `json:"VersionNames"`
}

// Validate validates this agreement products sub filter
func (m *AgreementProductsSubFilter) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AgreementProductsSubFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AgreementProductsSubFilter) UnmarshalBinary(b []byte) error {
	var res AgreementProductsSubFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
