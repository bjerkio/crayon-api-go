// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Address address
//
// swagger:model Address
type Address struct {

	// address type
	// Enum: [None Invoice Delivery]
	AddressType string `json:"AddressType,omitempty"`

	// city
	City string `json:"City,omitempty"`

	// complete address
	CompleteAddress string `json:"CompleteAddress,omitempty"`

	// country code
	CountryCode string `json:"CountryCode,omitempty"`

	// county
	County string `json:"County,omitempty"`

	// Id
	ID int64 `json:"Id,omitempty"`

	// name
	Name string `json:"Name,omitempty"`

	// organization
	Organization *ObjectReference `json:"Organization,omitempty"`

	// primary
	Primary bool `json:"Primary,omitempty"`

	// state
	State string `json:"State,omitempty"`

	// street
	Street string `json:"Street,omitempty"`

	// zip code
	ZipCode string `json:"ZipCode,omitempty"`
}

// Validate validates this address
func (m *Address) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddressType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOrganization(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var addressTypeAddressTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["None","Invoice","Delivery"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		addressTypeAddressTypePropEnum = append(addressTypeAddressTypePropEnum, v)
	}
}

const (

	// AddressAddressTypeNone captures enum value "None"
	AddressAddressTypeNone string = "None"

	// AddressAddressTypeInvoice captures enum value "Invoice"
	AddressAddressTypeInvoice string = "Invoice"

	// AddressAddressTypeDelivery captures enum value "Delivery"
	AddressAddressTypeDelivery string = "Delivery"
)

// prop value enum
func (m *Address) validateAddressTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, addressTypeAddressTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *Address) validateAddressType(formats strfmt.Registry) error {

	if swag.IsZero(m.AddressType) { // not required
		return nil
	}

	// value enum
	if err := m.validateAddressTypeEnum("AddressType", "body", m.AddressType); err != nil {
		return err
	}

	return nil
}

func (m *Address) validateOrganization(formats strfmt.Registry) error {

	if swag.IsZero(m.Organization) { // not required
		return nil
	}

	if m.Organization != nil {
		if err := m.Organization.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("Organization")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Address) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Address) UnmarshalBinary(b []byte) error {
	var res Address
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
